{"version":3,"sources":["lib/contexts/useRequiredContext.ts","contexts/PoseContext.tsx","contexts/ErrorMessageToUserContext.tsx","contexts/CameraSelectionContext.tsx","contexts/UserVideoStreamContext.tsx","components/CameraSelectionButton.tsx","lib/browser-api/useUserCameraDevices.ts","components/Video.tsx","components/BodyPartEmoji.tsx","components/Message.tsx","components/LoadingIndicator.tsx","components/MessageOrLoadingIndicator.tsx","App.tsx","index.tsx"],"names":["useRequiredContext","contextRef","contextName","providerName","context","useContext","useMemo","undefined","Error","ContextRef","createContext","BODY_PART_KEYS","nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","PoseContextProvider","children","useState","poses","setPoses","Provider","value","useThisContext","ErrorMessageToUserProvider","message","setMessage","useErrorMessageToUser","CameraSelectionProvider","cameraId","setCameraId","useSelectedCameraId","UserVideoStreamProvider","videoSrcObject","setVideoSrcObject","selectedCameraId","useEffect","getVideoTracks","forEach","track","stop","navigator","mediaDevices","getUserMedia","audio","video","deviceId","exact","then","stream","catch","e","useVideoStream","useStyles","makeStyles","theme","root","backgroundColor","padding","height","borderRadius","boxSizing","display","flexDirection","justifyContent","alignItems","icon","width","CameraSelectionButton","className","classes","cameras","setCameras","enumerateDevices","devices","cameraDevices","filter","kind","useUserCameraDevices","setSelectedCameraId","videoStream","idOfCurrentCamera","getSettings","currentDeviceIndex","findIndex","nextDeviceIndex","length","nextCamera","console","log","onClick","useCallback","map","ButtonBase","clsx","transition","fadedOut","opacity","fadedIn","objectFit","objectPosition","cameraSelector","zIndex","position","bottom","left","Video","videoEl","setVideoEl","detector","setDetector","srcObject","detectorConfig","modelType","poseDetection","SINGLEPOSE_LIGHTNING","MoveNet","newDetector","videoLoadedData","setVideoLoadedData","interval","setInterval","setupDetector","clearInterval","a","estimatePoses","getMediaScaleFactorAndOffset","scaleFactor","xOffset","yOffset","adjustedPoses","pose","keypoints","keypoint","x","y","playsInline","autoPlay","onLoadedData","ref","videoElement","Math","max","clientWidth","videoWidth","clientHeight","videoHeight","min","borderWidth","textAlign","fontSize","lineHeight","userSelect","cursor","BodyPartEmoji","bodyPart","emoji","scoreThreshold","nodes","node","keyPointIndex","person","score","usePoseNodes","key","style","top","ELEMENT_SIZE","marginLeft","marginRight","Message","ldsEllipsis","background","animationTimingFunction","animation","transform","LoadingIndicator","MessageOrLoadingIndicator","right","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8f381a9.chunk.js","sourcesContent":["import {useContext, useMemo} from \"react\";\r\n\r\nexport function useRequiredContext<T extends any>(\r\n    contextRef: React.Context<T | undefined>,\r\n    contextName: string = 'context',\r\n    providerName: string = 'provider'\r\n): T\r\n{\r\n    const context = useContext(contextRef);\r\n    return useMemo(\r\n        () => {\r\n            if (context === undefined)\r\n                throw new Error(`Attempting to use ${contextName} outside of ${providerName}`);\r\n            return context;\r\n        },\r\n        [context],\r\n    );\r\n}","import * as React from 'react';\r\nimport {createContext, FC, useMemo, useState} from 'react';\r\nimport * as poseDetection from '@tensorflow-models/pose-detection';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport {useRequiredContext} from \"../lib/contexts/useRequiredContext\";\r\n\r\n\r\ninterface Context\r\n{\r\n\tposes: poseDetection.Pose[] | undefined\r\n\tsetPoses: (poses: poseDetection.Pose[] | undefined) => void\r\n}\r\n\r\nconst ContextRef = createContext<Context | undefined>(undefined);\r\n\r\nconst BODY_PART_KEYS = {\r\n\tnose: 0,\r\n\tleft_eye: 1,\r\n\tright_eye: 2,\r\n\tleft_ear: 3,\r\n\tright_ear: 4,\r\n\tleft_shoulder: 5,\r\n\tright_shoulder: 6,\r\n\tleft_elbow: 7,\r\n\tright_elbow: 8,\r\n\tleft_wrist: 9,\r\n\tright_wrist: 10,\r\n\tleft_hip: 11,\r\n\tright_hip: 12,\r\n\tleft_knee: 13,\r\n\tright_knee: 14,\r\n\tleft_ankle: 15,\r\n\tright_ankle: 16,\r\n};\r\n\r\nexport type BodyPartName = keyof (typeof BODY_PART_KEYS);\r\n\r\nexport const PoseContextProvider: FC =\r\n    (\r\n        {\r\n            children,\r\n        },\r\n    ) =>\r\n    {\r\n    \tconst [poses, setPoses] = useState<poseDetection.Pose[]>();\r\n        return <ContextRef.Provider value={useMemo(() => ({\r\n\t\t\tposes,\r\n\t\t\tsetPoses,\r\n\t\t}), [poses, setPoses])}>\r\n\t\t\t{children}\r\n\t\t</ContextRef.Provider>;\r\n    };\r\n\r\nfunction useThisContext()\r\n{\r\n\treturn useRequiredContext(ContextRef, 'PoseContext', 'PoseContextProvider');\r\n}\r\n\r\nexport function useSetPoses()\r\n{\r\n\treturn useThisContext().setPoses;\r\n}\r\n\r\nexport function usePoseNodes(node: BodyPartName, scoreThreshold: number = 0.5)\r\n{\r\n\tconst {poses} = useThisContext();\r\n\treturn useMemo(\r\n\t\t() => {\r\n\t\t\tconst keyPointIndex = BODY_PART_KEYS[node];\r\n\t\t\treturn poses\r\n\t\t\t\t?.map(person => person.keypoints[keyPointIndex]!)\r\n\t\t\t\t.filter(({score}) => score !== undefined && score > scoreThreshold);\r\n\t\t},\r\n\t\t[poses, node],\r\n\t);\r\n}","import * as React from 'react';\r\nimport {createContext, FC, useMemo, useState} from 'react';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport {useRequiredContext} from \"../lib/contexts/useRequiredContext\";\r\n\r\n\r\ninterface Context\r\n{\r\n\tmessage: string | undefined\r\n\tsetMessage: (message: string | undefined) => void\r\n}\r\n\r\nconst ContextRef = createContext<Context | undefined>(undefined);\r\n\r\nexport const ErrorMessageToUserProvider: FC =\r\n    (\r\n        {\r\n            children,\r\n        },\r\n    ) =>\r\n    {\r\n\t\tconst [message, setMessage] = useState<string>();\r\n        return <ContextRef.Provider value={useMemo(() => ({\r\n\t\t\tmessage,\r\n\t\t\tsetMessage,\r\n\t\t}), [message, setMessage])}>\r\n\t\t\t{children}\r\n\t\t</ContextRef.Provider>;\r\n    };\r\n\r\nexport function useErrorMessageToUser(): [string | undefined, (value: string | undefined) => void]\r\n{\r\n\tconst {message, setMessage} = useRequiredContext(ContextRef, 'ErrorMessageToUserContext');\r\n\treturn [\r\n\t\tmessage,\r\n\t\tsetMessage\r\n\t];\r\n}","import * as React from 'react';\r\nimport {createContext, FC, useMemo, useState} from 'react';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport {useRequiredContext} from \"../lib/contexts/useRequiredContext\";\r\n\r\n\r\ninterface Context\r\n{\r\n\tcameraId: string | undefined\r\n\tsetCameraId: (cameraId: string | undefined) => void\r\n}\r\n\r\nconst ContextRef = createContext<Context | undefined>(undefined);\r\n\r\nexport const CameraSelectionProvider: FC =\r\n    (\r\n        {\r\n            children,\r\n        },\r\n    ) =>\r\n    {\r\n    \tconst [cameraId, setCameraId] = useState<string>();\r\n        return <ContextRef.Provider value={useMemo(() => ({\r\n\t\t\tcameraId,\r\n\t\t\tsetCameraId,\r\n\t\t}), [cameraId, setCameraId])}>\r\n\t\t\t{children}\r\n\t\t</ContextRef.Provider>;\r\n    };\r\n\r\nexport function useSelectedCameraId(): [string | undefined, (cameraId: string | undefined) => void]\r\n{\r\n\tconst {cameraId, setCameraId} = useRequiredContext(ContextRef, 'CameraSelectionContext');\r\n\treturn [cameraId, setCameraId];\r\n}","import * as React from 'react';\r\nimport {createContext, FC, useEffect, useMemo, useState} from 'react';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport {useRequiredContext} from \"../lib/contexts/useRequiredContext\";\r\nimport {useErrorMessageToUser} from \"./ErrorMessageToUserContext\";\r\nimport {useSelectedCameraId} from \"./CameraSelectionContext\";\r\n\r\n\r\ninterface Context\r\n{\r\n\tvideoSrcObject: MediaStream | undefined\r\n}\r\n\r\nconst ContextRef = createContext<Context | undefined>(undefined);\r\n\r\nexport const UserVideoStreamProvider: FC =\r\n    (\r\n        {\r\n            children,\r\n        },\r\n    ) =>\r\n    {\r\n\t\tconst [videoSrcObject, setVideoSrcObject] = useState<MediaStream>();\r\n\t\tconst [_, setMessage] = useErrorMessageToUser();\r\n\t\tconst [selectedCameraId, setSelectedCameraId] = useSelectedCameraId();\r\n\t\tuseEffect(\r\n\t\t\t() => {\r\n\t\t\t\tsetVideoSrcObject(value => {\r\n\t\t\t\t\tvalue?.getVideoTracks().forEach(track => track.stop());\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t});\r\n\t\t\t\tnavigator\r\n\t\t\t\t\t.mediaDevices\r\n\t\t\t\t\t.getUserMedia({\r\n\t\t\t\t\t\taudio: false,\r\n\t\t\t\t\t\tvideo: {\r\n\t\t\t\t\t\t\tdeviceId: {\r\n\t\t\t\t\t\t\t\texact: selectedCameraId,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(stream => {\r\n\t\t\t\t\t\t// window.stream = stream; // make stream available to browser console\r\n\t\t\t\t\t\t// videoEl.srcObject = stream;\r\n\t\t\t\t\t\tsetVideoSrcObject(stream);\r\n\t\t\t\t\t\t// videoEl.classList.add('faded-in')\r\n\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(e => {\r\n\t\t\t\t\t\tsetMessage(`Unable to obtain camera stream. Error: ${e.message}`);\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t[setMessage, selectedCameraId],\r\n\t\t);\r\n        return <ContextRef.Provider value={useMemo(() => ({\r\n\t\t\tvideoSrcObject,\r\n\t\t}), [videoSrcObject])}>\r\n\t\t\t{children}\r\n\t\t</ContextRef.Provider>;\r\n    };\r\n\r\nexport function useVideoStream(): MediaStream | undefined\r\n{\r\n\treturn useRequiredContext(ContextRef, 'UserVideoStreamContext', 'UserVideoStreamProvider').videoSrcObject;\r\n}","import * as React from 'react';\r\nimport {FC, useCallback, useMemo} from 'react';\r\nimport {ButtonBase, makeStyles} from \"@material-ui/core\";\r\nimport FlipCameraIosIcon from '@material-ui/icons/FlipCameraIos';\r\nimport clsx from \"clsx\";\r\nimport {useUserCameraDevices} from \"../lib/browser-api/useUserCameraDevices\";\r\nimport {useSelectedCameraId} from \"../contexts/CameraSelectionContext\";\r\nimport {useVideoStream} from \"../contexts/UserVideoStreamContext\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#ee886b',\r\n        padding: 16,\r\n        height: 60,\r\n        borderRadius: 30,\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        height: 32,\r\n    },\r\n}));\r\n\r\ninterface CameraSelectionButtonProps\r\n{\r\n    className?: string\r\n}\r\n\r\nexport const CameraSelectionButton: FC<CameraSelectionButtonProps> =\r\n    (\r\n        {\r\n            className,\r\n        },\r\n    ) =>\r\n    {\r\n        const classes = useStyles();\r\n        const cameras = useUserCameraDevices();\r\n        const [selectedCameraId, setSelectedCameraId] = useSelectedCameraId();\r\n        const videoStream = useVideoStream();\r\n        const idOfCurrentCamera = useMemo(\r\n            () => selectedCameraId !== undefined\r\n                ? selectedCameraId\r\n                : videoStream?.getVideoTracks()[0]?.getSettings().deviceId,\r\n            [selectedCameraId, videoStream],\r\n        );\r\n        const currentDeviceIndex = useMemo(\r\n            () => {\r\n                if (idOfCurrentCamera !== undefined)\r\n                    return cameras?.findIndex(({deviceId}) => deviceId === idOfCurrentCamera);\r\n            },\r\n            [idOfCurrentCamera, cameras],\r\n        );\r\n        const nextDeviceIndex = useMemo(\r\n            () => {\r\n                if (cameras !== undefined)\r\n                {\r\n                    return currentDeviceIndex !== undefined\r\n                        ? (currentDeviceIndex + 1) % cameras.length\r\n                        : 0;\r\n                }\r\n            },\r\n            [cameras, currentDeviceIndex],\r\n        );\r\n        const nextCamera = useMemo(\r\n            () => {\r\n                if (cameras !== undefined && nextDeviceIndex !== undefined)\r\n                    return cameras[nextDeviceIndex];\r\n            },\r\n            [cameras, nextDeviceIndex],\r\n        );\r\n        console.log(cameras);\r\n        const onClick = useCallback(\r\n            () => {\r\n                if (nextCamera !== undefined)\r\n                    setSelectedCameraId(nextCamera.deviceId);\r\n            },\r\n            [nextCamera, setSelectedCameraId],\r\n        );\r\n        console.log(`cameras:`)\r\n        console.log(cameras);\r\n        console.log('camera ids:')\r\n        console.log(cameras?.map(({deviceId}) => deviceId))\r\n        console.log(`idOfCurrentCamera: ${idOfCurrentCamera}`)\r\n        console.log(`currentDeviceIndex: ${currentDeviceIndex}`)\r\n        console.log(`nextDeviceIndex: ${nextDeviceIndex}`)\r\n        console.log(`nextCamera: ${nextCamera?.deviceId}`)\r\n        if (nextCamera === undefined || cameras === undefined || cameras.length <= 1)\r\n            return null;\r\n        return <ButtonBase\r\n            className={clsx(classes.root, className)}\r\n            onClick={onClick}\r\n        >\r\n            <FlipCameraIosIcon className={classes.icon}/>\r\n\t\t</ButtonBase>;\r\n    };","import {useEffect, useState} from \"react\";\r\n\r\nexport function useUserCameraDevices()\r\n{\r\n    const [cameras, setCameras] = useState<MediaDeviceInfo[]>();\r\n    useEffect(\r\n        () => {\r\n            navigator.mediaDevices\r\n                .enumerateDevices()\r\n                .then(devices => {\r\n                    const cameraDevices = devices.filter(({kind}) => kind === 'videoinput');\r\n                    setCameras(cameraDevices);\r\n                });\r\n        },\r\n        [],\r\n    );\r\n    return cameras;\r\n}","import * as React from 'react';\r\nimport {FC, useCallback, useEffect, useState} from 'react';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport clsx from 'clsx';\r\nimport * as poseDetection from '@tensorflow-models/pose-detection';\r\nimport {PoseDetector} from '@tensorflow-models/pose-detection';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport {useSetPoses} from \"../contexts/PoseContext\";\r\nimport {useVideoStream} from \"../contexts/UserVideoStreamContext\";\r\nimport {CameraSelectionButton} from \"./CameraSelectionButton\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\ttransition: 'opacity 0.5s',\r\n\t},\r\n\tfadedOut: {\r\n\t\topacity: 0,\r\n\t},\r\n\tfadedIn: {\r\n\t\topacity: 1,\r\n\t},\r\n\tvideo: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tobjectFit: 'cover',\r\n\t\tobjectPosition: 'center center',\r\n\t},\r\n\tcameraSelector: {\r\n\t\tzIndex: 10,\r\n\t\tposition: 'absolute',\r\n\t\tbottom: 40,\r\n\t\tleft: 'calc(50% - 70px)',\r\n\t\twidth: 140,\r\n\t},\r\n}));\r\n\r\ninterface VideoProps\r\n{\r\n\tclassName?: string\r\n}\r\n\r\nexport const Video: FC<VideoProps> =\r\n    (\r\n        {\r\n            className,\r\n        },\r\n    ) =>\r\n    {\r\n\t\tconst [videoEl, setVideoEl] = useState<HTMLVideoElement | null>(null);\r\n\t\tconst [detector, setDetector] = useState<PoseDetector>();\r\n\t\tconst srcObject = useVideoStream();\r\n\t\tuseEffect(\r\n\t\t\t() => {\r\n\t\t\t\tconst detectorConfig = {modelType: poseDetection.movenet.modelType.SINGLEPOSE_LIGHTNING};\r\n\t\t\t\tposeDetection.createDetector(poseDetection.SupportedModels.MoveNet, detectorConfig)\r\n\t\t\t\t\t.then(newDetector => setDetector(newDetector));\r\n\t\t\t},\r\n\t\t\t[],\r\n\t\t);\r\n\t\tconst [videoLoadedData, setVideoLoadedData] = useState(false);\r\n\t\tconst onVideoLoadedData = useCallback(() => setVideoLoadedData(true), []);\r\n\t\tuseEffect(\r\n\t\t\t() => {\r\n\t\t\t\tif (videoEl !== null && srcObject !== undefined && detector !== undefined)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log('videoEl nonnull, srcOgbject nonnull and detector nonnull')\r\n\t\t\t\t\tvideoEl.srcObject = srcObject;\r\n\t\t\t\t\tif (videoLoadedData)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log('video loaded data')\r\n\t\t\t\t\t\tconst callback = () => setupDetector(videoEl, detector);\r\n\t\t\t\t\t\tconst interval = setInterval(callback, 50);\r\n\t\t\t\t\t\treturn () => {\r\n\t\t\t\t\t\t\tclearInterval(interval);\r\n\t\t\t\t\t\t\tsetVideoLoadedData(false);\r\n\t\t\t\t\t\t\tsetPoses(undefined);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t[videoEl, srcObject, detector, videoLoadedData],\r\n\t\t)\r\n\t\tconst setPoses = useSetPoses();\r\n\t\tconst setupDetector = useCallback(\r\n\t\t\tasync (videoEl: HTMLVideoElement, detector: PoseDetector) => {\r\n\t\t\t\tconst poses = await detector.estimatePoses(videoEl);\r\n\t\t\t\tconst {scaleFactor, xOffset, yOffset} = getMediaScaleFactorAndOffset(videoEl);\r\n\t\t\t\tconst adjustedPoses = poses\r\n\t\t\t\t\t.map(pose => ({\r\n\t\t\t\t\t\t...pose,\r\n\t\t\t\t\t\tkeypoints: pose\r\n\t\t\t\t\t\t\t.keypoints\r\n\t\t\t\t\t\t\t.map(keypoint => ({\r\n\t\t\t\t\t\t\t\t...keypoint,\r\n\t\t\t\t\t\t\t\tx: keypoint.x * scaleFactor + xOffset,\r\n\t\t\t\t\t\t\t\ty: keypoint.y * scaleFactor + yOffset,\r\n\t\t\t\t\t\t\t} as poseDetection.Keypoint))\r\n\t\t\t\t\t} as poseDetection.Pose));\r\n\t\t\t\tsetPoses(adjustedPoses);\r\n\t\t\t},\r\n\t\t\t[],\r\n\t\t);\r\n        const classes = useStyles();\r\n        return <div\r\n\t\t\tclassName={clsx(classes.root, className, (srcObject && videoLoadedData) ? classes.fadedIn : classes.fadedOut)}\r\n\t\t>\r\n\t\t\t<video\r\n\t\t\t\tclassName={classes.video}\r\n\t\t\t\tplaysInline\r\n\t\t\t\tautoPlay\r\n\t\t\t\t// width={1200}\r\n\t\t\t\t// width=\"100%\"\r\n\t\t\t\t// height=\"100%\"\r\n\t\t\t\tonLoadedData={useCallback(() => setVideoLoadedData(true), [])}\r\n\t\t\t\tref={setVideoEl}\r\n\t\t\t/>\r\n\t\t\t<CameraSelectionButton className={classes.cameraSelector}/>\r\n\t\t</div>;\r\n    };\r\n\r\nfunction getMediaScaleFactorAndOffset(videoElement: HTMLVideoElement)\r\n{\r\n\tconst scaleFactor = Math.max(\r\n\t\tvideoElement.clientWidth / videoElement.videoWidth,\r\n\t\tvideoElement.clientHeight / videoElement.videoHeight\r\n\t);\r\n\tconst xOffset = Math.min(0, (videoElement.clientWidth - scaleFactor * videoElement.videoWidth) / 2);\r\n\tconst yOffset = Math.min(0, (videoElement.clientHeight - scaleFactor * videoElement.videoHeight) / 2);\r\n\treturn {\r\n\t\tscaleFactor,\r\n\t\txOffset,\r\n\t\tyOffset,\r\n\t};\r\n}","import * as React from 'react';\r\nimport {FC} from 'react';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {BodyPartName, usePoseNodes} from \"../contexts/PoseContext\";\r\n\r\nconst ELEMENT_SIZE = 44;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: ELEMENT_SIZE,\r\n\t\theight: ELEMENT_SIZE,\r\n\t\tzIndex: 1,\r\n\t\tposition: 'absolute',\r\n\t\tborderWidth: 0,\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 62,\r\n\t\tlineHeight: `${ELEMENT_SIZE}px`,\r\n\t\tuserSelect: 'none',\r\n\t\tcursor: 'default',\r\n\t},\r\n}));\r\n\r\ninterface BodyPartEmojiProps\r\n{\r\n\tbodyPart: BodyPartName\r\n\temoji: string\r\n\tscoreThreshold?: number\r\n}\r\n\r\nexport const BodyPartEmoji: FC<BodyPartEmojiProps> =\r\n    (\r\n        {\r\n            bodyPart,\r\n\t\t\temoji,\r\n\t\t\tscoreThreshold,\r\n        },\r\n    ) =>\r\n    {\r\n        const classes = useStyles();\r\n        const nodes = usePoseNodes(bodyPart, scoreThreshold);\r\n\t\treturn <>\r\n\t\t\t{nodes?.map((node, key) => <div\r\n\t\t\t\tkey={key}\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: node.y - ELEMENT_SIZE / 2,\r\n\t\t\t\t\tleft: node.x - ELEMENT_SIZE / 2,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{emoji}\r\n\t\t\t</div>)}\r\n\t\t</>;\r\n    };","import * as React from 'react';\r\nimport {FC} from 'react';\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        fontSize: 24,\r\n        marginLeft: 24,\r\n        marginRight: 24,\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\ninterface MessageProps\r\n{\r\n    message?: string\r\n}\r\n\r\nexport const Message: FC<MessageProps> =\r\n    (\r\n        {\r\n            message,\r\n        },\r\n    ) =>\r\n    {\r\n        const classes = useStyles();\r\n        return message !== undefined\r\n            ?\r\n            <div className={classes.root}>\r\n                {message}\r\n            </div>\r\n            :\r\n            null;\r\n    };","import * as React from 'react';\r\nimport {FC} from 'react';\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tldsEllipsis: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tposition: 'relative',\r\n\t\twidth: 80,\r\n\t\theight: 80,\r\n\t\t'& div': {\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: 33,\r\n\t\t\twidth: 13,\r\n\t\t\theight: 13,\r\n\t\t\tborderRadius: '50%',\r\n\t\t\tbackground: '#fff',\r\n\t\t\tanimationTimingFunction: 'cubic-bezier(0, 1, 1, 0)',\r\n\t\t},\r\n\t\t'& div:nth-child(1)': {\r\n\t\t\tleft: 8,\r\n\t\t\tanimation: '$lds-ellipsis1 0.6s infinite',\r\n\t\t},\r\n\t\t'& div:nth-child(2)': {\r\n\t\t\tleft: 8,\r\n\t\t\tanimation: '$lds-ellipsis2 0.6s infinite',\r\n\t\t},\r\n\t\t'& div:nth-child(3)': {\r\n\t\t\tleft: 32,\r\n\t\t\tanimation: '$lds-ellipsis2 0.6s infinite',\r\n\t\t},\r\n\t\t'& div:nth-child(4)': {\r\n\t\t\tleft: 56,\r\n\t\t\tanimation: '$lds-ellipsis3 0.6s infinite',\r\n\t\t},\r\n\t},\r\n\t'@keyframes lds-ellipsis1': {\r\n\t\t'0%': {\r\n\t\t\ttransform: 'scale(0)',\r\n\t\t},\r\n\t\t'100%': {\r\n\t\t\ttransform: 'scale(1)',\r\n\t\t}\r\n\t},\r\n\t'@keyframes lds-ellipsis3': {\r\n\t\t'0%': {\r\n\t\t\ttransform: 'scale(1)',\r\n\t\t},\r\n\t\t'100%': {\r\n\t\t\ttransform: 'scale(0)',\r\n\t\t},\r\n\t},\r\n\t'@keyframes lds-ellipsis2': {\r\n\t\t'0%': {\r\n\t\t\ttransform: 'translate(0, 0)',\r\n\t\t},\r\n\t\t'100%': {\r\n\t\t\ttransform: 'translate(24px, 0)',\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nexport const LoadingIndicator: FC =\r\n    () =>\r\n    {\r\n        const classes = useStyles();\r\n        return <div className={classes.ldsEllipsis}>\r\n\t\t\t<div/>\r\n\t\t\t<div/>\r\n\t\t\t<div/>\r\n\t\t\t<div/>\r\n\t\t</div>;\r\n    };","import * as React from 'react';\r\nimport {FC} from 'react';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {Message} from \"./Message\";\r\nimport {LoadingIndicator} from \"./LoadingIndicator\";\r\nimport {useErrorMessageToUser} from \"../contexts/ErrorMessageToUserContext\";\r\n\r\nconst useStyles = makeStyles(theme => ({}));\r\n\r\ninterface MessageOrLoadingIndicatorProps\r\n{\r\n}\r\n\r\nexport const MessageOrLoadingIndicator: FC<MessageOrLoadingIndicatorProps> =\r\n    (\r\n        {\r\n            children,\r\n        },\r\n    ) =>\r\n    {\r\n    \tconst [message] = useErrorMessageToUser();\r\n        const classes = useStyles();\r\n        return <>\r\n\t\t\t<Message message={message}/>\r\n\t\t\t{!message && <LoadingIndicator/>}\r\n\t\t</>;\r\n    };","import React, {FC, useState} from 'react';\nimport './App.css';\nimport {makeStyles} from \"@material-ui/core\";\nimport {Video} from \"./components/Video\";\nimport {PoseContextProvider} from \"./contexts/PoseContext\";\nimport {BodyPartEmoji} from \"./components/BodyPartEmoji\";\nimport {CameraSelectionButton} from \"./components/CameraSelectionButton\";\nimport {ErrorMessageToUserProvider} from \"./contexts/ErrorMessageToUserContext\";\nimport {UserVideoStreamProvider} from \"./contexts/UserVideoStreamContext\";\nimport {MessageOrLoadingIndicator} from \"./components/MessageOrLoadingIndicator\";\nimport {CameraSelectionProvider} from \"./contexts/CameraSelectionContext\";\n\nconst useStyles = makeStyles(theme => ({\n    video: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        top: 0,\n        left: 0,\n        right: 0,\n    },\n}));\n\nconst App: FC = () => {\n\n    const classes = useStyles();\n    return <PoseContextProvider>\n        <ErrorMessageToUserProvider>\n            <CameraSelectionProvider>\n                <UserVideoStreamProvider>\n                    <MessageOrLoadingIndicator/>\n                    <Video className={classes.video}/>\n                    <BodyPartEmoji bodyPart=\"left_eye\" emoji=\"❤️\"/>\n                    <BodyPartEmoji bodyPart=\"right_eye\" emoji=\"❤️\"/>\n                </UserVideoStreamProvider>\n            </CameraSelectionProvider>\n        </ErrorMessageToUserProvider>\n    </PoseContextProvider>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}